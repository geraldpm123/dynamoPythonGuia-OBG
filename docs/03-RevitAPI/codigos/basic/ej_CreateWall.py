import clr

#Import Revit API
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import Wall


#import Revit Nodes and extensions
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

"""
#Conversiones de Objetos de Revit a Dynamo y Viceversa
#---------Revit a Dynamo
#Elements
Element.ToDSType(bool); #true if it's an element generated by Revit
#Geometry
XYZ.ToPoint() > Point
XYZ.ToVector() > Vector
Point.ToProtoType() > Point
List<XYZ>.ToPoints() > List<Point>
UV.ToProtoType() > UV
Curve.ToProtoType() > Curve
CurveArray.ToProtoType() > PolyCurve
PolyLine.ToProtoType() > PolyCurve
Plane.ToPlane() > Plane
Solid.ToProtoType() > Solid
Mesh.ToProtoType() > Mesh
IEnumerable<Mesh>.ToProtoType() > Mesh[]
Face.ToProtoType() > IEnumerable<Surface>
Transform.ToCoordinateSystem() > CoordinateSystem
BoundingBoxXYZ.ToProtoType() > BoundingBox

#---------Dynamo a Revit
#Elements
Element.InternalElement
#Geometry
Point.ToRevitType() > XYZ
Vector.ToRevitType() > XYZ
Plane.ToPlane() > Plane
List<Point>.ToXyzs() > List<XYZ>
Curve.ToRevitType() > Curve
PolyCurve.ToRevitType() > CurveLoop
Surface.ToRevitType() > IList<GeometryObject>
Solid.ToRevitType() > IList<GeometryObject>
Mesh.ToRevitType() > IList<GeometryObject>
CoordinateSystem.ToTransform() > Transform
CoordinateSystem.ToRevitBoundingBox() > BoundingBoxXYZ
BoundingBox.ToRevitType() > BoundingBoxXYZ
"""


#import Document Manager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

#Principales variables que tal vez usemos
doc = DocumentManager.Instance.CurrentDBDocument


lineaD = IN[0]
lineaR = lineaD.ToRevitType()

nivel = UnwrapElement(IN[1])


TransactionManager.Instance.EnsureInTransaction(doc)
# Creaun el muro en Revit
muro = Wall.Create(doc, lineaR, nivel.Id, True)

TransactionManager.Instance.TransactionTaskDone()

OUT = muro