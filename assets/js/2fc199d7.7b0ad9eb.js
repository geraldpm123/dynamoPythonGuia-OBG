"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5430],{1729:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=n(4848),t=n(8453);n(2364);const i={sidebar_position:4},l="4. FilteredElementCollector",a={id:"DynamoPython/RevitAPI/04FilteredElementCollector",title:"4. FilteredElementCollector",description:"La clase FilteredElementCollector de la API de Revit es una herramienta poderosa",source:"@site/docs/02-DynamoPython/03-RevitAPI/04FilteredElementCollector.mdx",sourceDirName:"02-DynamoPython/03-RevitAPI",slug:"/DynamoPython/RevitAPI/04FilteredElementCollector",permalink:"/dynamoPythonGuia-OBG/docs/DynamoPython/RevitAPI/04FilteredElementCollector",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-DynamoPython/03-RevitAPI/04FilteredElementCollector.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"guiaDynamoAvanzado",previous:{title:"3. Par\xe1metros de Revit",permalink:"/dynamoPythonGuia-OBG/docs/DynamoPython/RevitAPI/03TrabajandoParametros"},next:{title:"5. ICollection",permalink:"/dynamoPythonGuia-OBG/docs/DynamoPython/RevitAPI/05ICollection"}},s={},c=[{value:"4.1. Ejercicios Propuestos",id:"41-ejercicios-propuestos",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"4-filteredelementcollector",children:"4. FilteredElementCollector"}),"\n",(0,o.jsx)(r.p,{children:"La clase FilteredElementCollector de la API de Revit es una herramienta poderosa\r\npara recopilar y filtrar elementos en un documento de Revit. Esta clase te permite\r\nrealizar b\xfasquedas eficientes y espec\xedficas dentro de un modelo de Revit,\r\nbas\xe1ndote en varios criterios de filtrado."}),"\n",(0,o.jsxs)(n,{close:!0,children:[(0,o.jsx)("summary",{children:(0,o.jsx)(r.strong,{children:"Ejemplo: Obtener muros con FilteredElementCollector"})}),(0,o.jsx)(r.p,{children:"En este ejemplo se muestra como obetenr un elemento a partir del numero de Id"}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:'# -*- coding: utf-8 -*-\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndoc = __revit__.ActiveUIDocument.Document\r\n\r\n# Creamos el FilteredElementCollector\r\n# resaltado--next-line\r\nfec = FilteredElementCollector(doc)\r\n\r\n# Aplicamos un filtro para la categoria muros\r\nfec = fec.OfCategory(BuiltInCategory.OST_Walls)\r\n\r\n# Aplicamos un filtro para obtener solo las instancias\r\nfec = fec.WhereElementIsNotElementType()\r\n\r\n# Convertimos a iterable de elementos\r\nelementos = fec.ToElements()\r\n\r\n# Imprimir la cantidad de elementos\r\nprint("El colector tiene {} elementos".format(len(elementos)))\r\n[print("Muro Id: {}".format(elemento.Id.Value)) for elemento in elementos]\n'})})]}),"\n",(0,o.jsxs)(n,{close:!0,children:[(0,o.jsx)("summary",{children:(0,o.jsx)(r.strong,{children:"Ejemplo: Obtener tipos de Rebar con FilteredElementCollector"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:'# -*- coding: utf-8 -*-\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Structure import *\r\n\r\ndoc = __revit__.ActiveUIDocument.Document\r\n\r\n# Creamos el FilteredElementCollector\r\nfec = FilteredElementCollector(doc)\r\n\r\n# Aplicamos un filtro para la clase RebarBarType\r\nfec = fec.OfClass(RebarBarType)\r\n\r\n# Convertimos a lista\r\ntiposRebar = fec.ToElements()\r\n\r\n# Imprimir la cantidad de elementos\r\nprint("Hay en total {} tipos de Rebar".format(len(tiposRebar)))\r\n[print("Tipo Rebar Id: {}".format(tipo.Id.Value)) for tipo in tiposRebar]\n'})})]}),"\n",(0,o.jsx)(r.p,{children:"Tambien podriamos usar gran variedad de filtros para hacer mucho mas personalizado\r\nla recoleccion de elementos, pero esta vez haciendolo en menos lineas de codigo."}),"\n",(0,o.jsxs)(n,{close:!0,children:[(0,o.jsx)("summary",{children:(0,o.jsx)(r.strong,{children:"Ejemplo: Obtener muros visibles en la vista"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:'# -*- coding: utf-8 -*-\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndoc = __revit__.ActiveUIDocument.Document\r\n\r\n# Creamos un ElementFilter --\x3e VisibleInViewFilter\r\nelementFilter = VisibleInViewFilter(doc, doc.ActiveView.Id)\r\n\r\nelementos = FilteredElementCollector(doc).OfClass(Wall).WherePasses(elementFilter).ToElements()\r\n\r\n# Imprimir la cantidad de elementos\r\nprint("Los muros encontrados visibles en la vista actual {} son:".format(doc.ActiveView.Name))\r\n[print("Wall Id: {}".format(elem.Id.Value)) for elem in elementos]\n'})})]}),"\n",(0,o.jsx)(r.p,{children:"Ejemplo Aplicativo:"}),"\n",(0,o.jsxs)(n,{close:!0,children:[(0,o.jsx)("summary",{children:(0,o.jsx)(r.strong,{children:"Ejemplo: Modificar VG para muros"})}),(0,o.jsx)(r.p,{children:"Se quiere modificar la visibilidad de graficos de una vista para la categoria Muros,\r\nque se pinte con un patron de superficie de color rojo:"}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-python",children:'# -*- coding: utf-8 -*-\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndoc = __revit__.ActiveUIDocument.Document\r\n\r\n# 1. Definimos la variable vista\r\nvista = doc.ActiveView\r\n\r\n# 2. Definir el id de la categoria\r\ncategoryId = ElementId(BuiltInCategory.OST_Walls)\r\n\r\n# 3. Recuperamos los FillPatternElement\r\npatrones = FilteredElementCollector(doc).OfClass(FillPatternElement).ToElements()\r\n\r\nfillPat = [patron for patron in patrones if patron.GetFillPattern().IsSolidFill][0]\r\n\r\n# 4. Crear el OverrideGraphicSettings\r\nogs = OverrideGraphicSettings()\r\nogs.SetSurfaceForegroundPatternId(fillPat.Id)\r\nogs.SetSurfaceForegroundPatternColor(Color(255, 0, 0))\r\n\r\n# 5. Modificar la visbilidad de graficos para la vista\r\ntrans = Transaction(doc, "Modificando VG")\r\ntrans.Start()\r\nvista.SetCategoryOverrides(categoryId, ogs)\r\ntrans.Commit()\n'})})]}),"\n",(0,o.jsx)(r.h2,{id:"41-ejercicios-propuestos",children:"4.1. Ejercicios Propuestos"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Crear un Python Script que devuelva todos los niveles de un proyecto."}),"\n",(0,o.jsx)(r.li,{children:"Crear un Python Script que devuelva todos las vistas 3D del proyecto."}),"\n",(0,o.jsx)(r.li,{children:"Crear un Python Script que devuelva todas las instancias de vigas del proyecto (no modelo in situ)."}),"\n",(0,o.jsx)(r.li,{children:"Crear un Python Script que devuelva todos los warnings de un proyecto."}),"\n",(0,o.jsx)(r.li,{children:"(Desafio) Crear un Python Script que devuelva todos los parametros de proyecto."}),"\n",(0,o.jsx)(r.li,{children:'(Desafio) Crear un Python Script que devuelva todos los muros cuyo parametro comentarios empieza con la letra "C".'}),"\n"]})]})}function m(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);