"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4660],{4020:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var i=r(4848),o=r(8453);r(2364);const t={sidebar_position:1},a="1. XAML con IronPython",l={id:"DynamoPython/TemasAdicionales/01FormulariosXAML",title:"1. XAML con IronPython",description:"Introducci\xf3n",source:"@site/docs/02-DynamoPython/04-TemasAdicionales/01FormulariosXAML.mdx",sourceDirName:"02-DynamoPython/04-TemasAdicionales",slug:"/DynamoPython/TemasAdicionales/01FormulariosXAML",permalink:"/dynamoPythonGuia-OBG/docs/DynamoPython/TemasAdicionales/01FormulariosXAML",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-DynamoPython/04-TemasAdicionales/01FormulariosXAML.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guiaDynamoAvanzado",previous:{title:"Temas Adicionales",permalink:"/dynamoPythonGuia-OBG/docs/category/temas-adicionales"},next:{title:"1. Selecci\xf3n de elementos de Revit",permalink:"/dynamoPythonGuia-OBG/docs/DynamoPython/TemasAdicionales/01Selection"}},s={},c=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Estructura B\xe1sica de una Aplicaci\xf3n WPF",id:"estructura-b\xe1sica-de-una-aplicaci\xf3n-wpf",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"1-xaml-con-ironpython",children:"1. XAML con IronPython"}),"\n",(0,i.jsx)(n.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"}),"\n",(0,i.jsx)(n.p,{children:"XAML (eXtensible Application Markup Language) es un lenguaje basado\r\nen XML utilizado para definir interfaces de usuario en aplicaciones\r\nWPF (Windows Presentation Foundation). IronPython es una implementaci\xf3n\r\nde Python que permite interactuar con .NET Framework, lo que incluye WPF.\r\nEsta gu\xeda te ayudar\xe1 a comenzar a crear interfaces de usuario en WPF\r\nutilizando XAML e IronPython."}),"\n",(0,i.jsx)(n.h1,{id:"2-pyrevit-y-forms",children:"2. PyRevit y forms"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://pyrevitlabs.notion.site/Effective-Input-ea95e95282a24ba9b154ef88f4f8d056",children:"https://pyrevitlabs.notion.site/Effective-Input-ea95e95282a24ba9b154ef88f4f8d056"}),"\r\n",(0,i.jsx)(n.a,{href:"https://pyrevit1.readthedocs.io/en/latest/outputfeatures.html",children:"https://pyrevit1.readthedocs.io/en/latest/outputfeatures.html"})]}),"\n",(0,i.jsx)(n.h2,{id:"estructura-b\xe1sica-de-una-aplicaci\xf3n-wpf",children:"Estructura B\xe1sica de una Aplicaci\xf3n WPF"}),"\n",(0,i.jsx)(n.p,{children:"Una aplicaci\xf3n WPF t\xedpica tiene dos componentes principales:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"XAML: Define la estructura y el dise\xf1o de la interfaz de usuario."}),"\n",(0,i.jsx)(n.li,{children:"Code-Behind: C\xf3digo en IronPython que maneja la l\xf3gica de la aplicaci\xf3n."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://wpf-tutorial.com/",children:"https://wpf-tutorial.com/"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<Window \r\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\r\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\r\n    Title="Titulo de la ventana" \r\n    Height="350" \r\n    Width="525">\r\n    <Grid>\r\n        <Button Name="myButton" Content="Haz clic aqu\xed" \r\n        Width="100" Height="50" VerticalAlignment="Center" \r\n        HorizontalAlignment="Center"\r\n        Click="btnAceptar_Click"/>\r\n    </Grid>\r\n</Window>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'# -*- coding: utf-8 -*-\r\nfrom pyrevit import forms\r\nfrom Autodesk.Revit.UI import *\r\n\r\n# Clase Formulario\r\nclass Formulario1(forms.WPFWindow):\r\n    # Constructor y asignacion de archivo XAML\r\n    def __init__(self, xaml_file_name):\r\n        self.form = forms.WPFWindow.__init__(self, xaml_file_name)\r\n\r\n    # Event Handlers de la ventana:\r\n    def btnAceptar_Click(self, sender, e):\r\n        # Mostramos un TaskDialog al usuario\r\n        TaskDialog.Show("Titulo", "Ha hecho click en el boton")\r\n\r\n# Creamos el objeto formulario\r\nformulario = Formulario1("formulario1.xaml")\r\n\r\n# Mostramos el formulario\r\nformulario.ShowDialog()\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<Window \r\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\r\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\r\n    Title="Titulo de la ventana" \r\n    Height="350" \r\n    Width="500"\r\n    WindowStartupLocation="CenterScreen"\r\n    WindowStyle="ThreeDBorderWindow">\r\n    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height="45"/>\r\n            <RowDefinition Height="45"/>\r\n            <RowDefinition Height="45"/>\r\n        </Grid.RowDefinitions>\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width="100"/>\r\n            <ColumnDefinition Width="200"/>\r\n        </Grid.ColumnDefinitions>\r\n        <TextBlock Grid.Row="1" Grid.Column="0" \r\n                Text="Seleccione Nivel" VerticalAlignment="Center"/>\r\n        <ComboBox Grid.Row="1" Grid.Column="1" \r\n                Name="cmbNiveles"  VerticalAlignment="Center"/>\r\n        <Button Grid.Row="2" Grid.ColumnSpan="2"\r\n                Content="Aceptar" \r\n                Click="btnAceptar_Click"/>\r\n    </Grid>\r\n</Window>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# -*- coding: utf-8 -*-\r\nfrom pyrevit import forms\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.UI import *\r\n\r\ndoc = __revit__.ActiveUIDocument.Document\r\n\r\n# Formulario\r\nclass Formulario1(forms.WPFWindow):\r\n    # Constructor y asignacion de archivo XAML\r\n    def __init__(self, xaml_file_name, listaNiveles):\r\n        self.form = forms.WPFWindow.__init__(self, xaml_file_name)\r\n        self.cmbNiveles.ItemsSource = listaNiveles\r\n        self.cmbNiveles.DisplayMemberPath = "Name"\r\n\r\n    # Event Handlers de la ventana:\r\n    def btnAceptar_Click(self, sender, e):\r\n        # Obtenemos el nivel seleccionado\r\n        nivelSeleccionado = self.cmbNiveles.SelectedItem\r\n        # Mostramos un TaskDialog al usuario\r\n        TaskDialog.Show("Titulo", "Ha seleccionado el nivel {}".format(nivelSeleccionado.Name))\r\n\r\n# Obtenemos la lista de niveles\r\nniveles = FilteredElementCollector(doc).OfClass(Level).ToElements()\r\n\r\n# Creamos el objeto formulario\r\nformulario = Formulario1("formulario1.xaml", niveles)\r\n\r\n# Mostramos el formulario\r\nformulario.ShowDialog()\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<Window \r\n    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"\r\n    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\r\n    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\r\n    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\r\n    Title="Titulo de la ventana" \r\n    Height="350" \r\n    Width="500"\r\n    WindowStartupLocation="CenterScreen"\r\n    WindowStyle="ThreeDBorderWindow">\r\n    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">\r\n        <StackPanel>\r\n            <TextBlock Text="Selecciona los Niveles:" Margin="10" FontSize="14"/>\r\n            <ListBox Name="levelsListBox">\r\n                <ListBox.ItemTemplate>\r\n                    <DataTemplate>\r\n                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked}"/>\r\n                    </DataTemplate>\r\n                </ListBox.ItemTemplate>\r\n            </ListBox>\r\n            <Button  Content="Aceptar" Margin="10" Width="80" HorizontalAlignment="Right" Click="btnAceptar_Click"/>\r\n        </StackPanel>\r\n    </Grid>\r\n</Window>\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'# -*- coding: utf-8 -*-\r\nfrom pyrevit import forms\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.UI import *\r\n\r\ndoc = __revit__.ActiveUIDocument.Document\r\n\r\n# Clase para los items de Level\r\nclass LevelItem:\r\n    def __init__(self, name):\r\n        self.Name = name\r\n        self.IsChecked = False\r\n\r\n# Formulario\r\nclass Formulario1(forms.WPFWindow):\r\n    # Constructor y asignacion de archivo XAML\r\n    def __init__(self, xaml_file_name, listaItemNiveles):\r\n        self.form = forms.WPFWindow.__init__(self, xaml_file_name)\r\n\r\n        # Obtener los niveles de Revit\r\n        self.levels = listaItemNiveles\r\n\r\n        # Asignar niveles al ListBox\r\n        self.levelsListBox.ItemsSource = self.levels\r\n\r\n\r\n    # Event Handlers de la ventana:\r\n    def btnAceptar_Click(self, sender, e):\r\n        selected_levels = [level.Name for level in self.levels if level.IsChecked]\r\n        print("Niveles seleccionados:")\r\n        for level in selected_levels:\r\n            print(level)\r\n        #TaskDialog.Show("Titulo", "Ha seleccionado el nivel {}".format(nivelSeleccionado.Name))\r\n        self.Close()\r\n\r\n\r\n# Obtenemos la lista de niveles\r\nniveles = FilteredElementCollector(doc).OfClass(Level).ToElements()\r\nlevels = [LevelItem(level.Name) for level in niveles]\r\n\r\n# Creamos el objeto formulario\r\nformulario = Formulario1("formulario1.xaml", levels)\r\n\r\n# Mostramos el formulario\r\nformulario.ShowDialog()\r\n\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);