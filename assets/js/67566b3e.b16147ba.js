"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1007],{225:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var s=n(4848),o=n(8453);const t={sidebar_position:1},r="1. Programaci\xf3n Orientada a Objetos (POO)",i={id:"POO/01POO",title:"1. Programaci\xf3n Orientada a Objetos (POO)",description:"La Programaci\xf3n Orientada a Objetos (POO) es un paradigma fundamental en el desarrollo de",source:"@site/docs/02-POO/01POO.md",sourceDirName:"02-POO",slug:"/POO/01POO",permalink:"/dynamoPythonGuia-OBG/docs/POO/01POO",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-POO/01POO.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Programaci\xf3n Orientada a Objetos",permalink:"/dynamoPythonGuia-OBG/docs/category/programaci\xf3n-orientada-a-objetos"},next:{title:"2. Herencia",permalink:"/dynamoPythonGuia-OBG/docs/POO/02Herencia"}},d={},c=[{value:"1.1. Clase",id:"11-clase",level:2}];function l(e){const a={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"1-programaci\xf3n-orientada-a-objetos-poo",children:"1. Programaci\xf3n Orientada a Objetos (POO)"}),"\n",(0,s.jsx)(a.p,{children:"La Programaci\xf3n Orientada a Objetos (POO) es un paradigma fundamental en el desarrollo de\r\nsoftware que organiza el c\xf3digo en entidades llamadas \xf6bjetos\r\n\xa8\r\n. Estos objetos encapsulan datos\r\ny comportamientos, permitiendo una estructura m\xe1s modular y comprensible del c\xf3digo. En el\r\ncontexto de Dynamo y Python, la POO juega un papel esencial para crear scripts m\xe1s eficientes\r\ny mantenibles."}),"\n",(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsx)("img",{src:n(6492).A,alt:"ObjetoCelular"})}),"\n",(0,s.jsxs)(a.p,{children:["En la figura se puede ver las propiedades y m\xe9todos de un objeto real celular, en cuanto a\r\nlas propiedades, cada una almacena un tipo de valor espec\xedfico (",(0,s.jsx)(a.code,{children:"int"}),", ",(0,s.jsx)(a.code,{children:"double"}),", ",(0,s.jsx)(a.code,{children:"float"}),", ",(0,s.jsx)(a.code,{children:"string"}),", ",(0,s.jsx)(a.code,{children:"objeto de otra clase"}),", etc.) y en los m\xe9todos se puede distinguir que son funciones y pueden o no tener\r\nargumentos que van dentro de los par\xe9ntesis, ",(0,s.jsx)(a.code,{children:"void"})," significa que el m\xe9todo no devolver\xe1 ning\xfan\r\nvalor al ser llamada o utilizada."]}),"\n",(0,s.jsx)(a.h2,{id:"11-clase",children:"1.1. Clase"}),"\n",(0,s.jsxs)(a.p,{children:["En POO, una clase es una plantilla para crear objetos, la figura antes mostrada seria la plantilla para cualquier objeto ",(0,s.jsx)(a.strong,{children:"Celular"})," que existe o se crear\xe1. En este sentido los objetos son instancias que pertenecen a una clase especifica."]}),"\n",(0,s.jsx)(a.p,{children:"Es asi que todo objeto tiene cada una de las propiedades y m\xe9todos establecidos en la plantilla de su respectiva Clase."}),"\n",(0,s.jsx)(a.admonition,{title:"Termino T\xe9cnico",type:"tip",children:(0,s.jsx)(a.p,{children:"Cuando creamos un objeto de una determinada Clase decimos que estamos instanciando la clase, es decir, se est\xe1\r\ncreando un objeto perteneciente a una Clase en especifico"})}),"\n",(0,s.jsx)(a.admonition,{title:"Atributos y M\xe9todos",type:"tip",children:(0,s.jsxs)(a.p,{children:["Los ",(0,s.jsx)(a.strong,{children:"atributos"})," son variables asociadas a un objeto, mientras que los ",(0,s.jsx)(a.strong,{children:"m\xe9todos"})," son funciones asociadas a la clase. En el ejemplo anterior, ",(0,s.jsx)(a.code,{children:"TamanioPantalla"})," y ",(0,s.jsx)(a.code,{children:"EspacioMemoria"})," son atributos, y ",(0,s.jsx)(a.code,{children:"EncenderCelular()"})," es un m\xe9todo."]})}),"\n",(0,s.jsxs)(a.p,{children:["Bas\xe1ndonos en el ejemplo anterior podemos tener muchos objetos pertenecientes a la clase ",(0,s.jsx)(a.strong,{children:"Celular"})," y cada uno de ellos tendr\xe1n las propiedades y m\xe9todos establecidos seg\xfan la Clase."]}),"\n",(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsx)("img",{src:n(9162).A,alt:"instanciasClaseCelular"})})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9162:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/instanciasClaseCelular-add35b4cbe36187a056317550b66e0b0.png"},6492:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/objetoCelular-cb68a50c2758e06345866a57cc1e8b6f.png"},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>i});var s=n(6540);const o={},t=s.createContext(o);function r(e){const a=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(t.Provider,{value:a},e.children)}}}]);