"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5309],{6868:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=s(4848),o=s(8453);const i={sidebar_position:5},r="5. Funciones en Python",l={id:"Generalidades/05Funciones",title:"5. Funciones en Python",description:"En Python, una funci\xf3n es un bloque de c\xf3digo que realiza una tarea espec\xedfica y que puede",source:"@site/docs/01-Generalidades/05Funciones.md",sourceDirName:"01-Generalidades",slug:"/Generalidades/05Funciones",permalink:"/dynamoPythonGuia-OBG/docs/Generalidades/05Funciones",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/01-Generalidades/05Funciones.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"4. Listas en Python",permalink:"/dynamoPythonGuia-OBG/docs/Generalidades/04Listas"},next:{title:"6. Estructuras Condicionales",permalink:"/dynamoPythonGuia-OBG/docs/Generalidades/06Condicionales"}},d={},c=[{value:"5.1. Funciones preestablecidas",id:"51-funciones-preestablecidas",level:2},{value:"5.2. Funciones Personalizadas",id:"52-funciones-personalizadas",level:2}];function t(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"5-funciones-en-python",children:"5. Funciones en Python"}),"\n",(0,a.jsx)(n.p,{children:"En Python, una funci\xf3n es un bloque de c\xf3digo que realiza una tarea espec\xedfica y que puede\r\nser reutilizado en diferentes partes de un programa. Las funciones son una forma de organizar\r\ny modularizar el c\xf3digo, lo que facilita el mantenimiento, la reutilizaci\xf3n y la comprensi\xf3n del\r\nmismo."}),"\n",(0,a.jsx)(n.h2,{id:"51-funciones-preestablecidas",children:"5.1. Funciones preestablecidas"}),"\n",(0,a.jsx)(n.p,{children:"En Python, existen muchas funciones preestablecidas (tambi\xe9n conocidas como funciones incorporadas o funciones integradas) que vienen incluidas en el lenguaje y est\xe1n disponibles para su\r\nuso sin necesidad de importar m\xf3dulos adicionales. Estas funciones est\xe1n dise\xf1adas para realizar\r\ntareas comunes y b\xe1sicas, y forman parte del n\xfacleo del lenguaje. Puedes usar estas funciones\r\ndirectamente en tus programas sin necesidad de definirlas previamente.\r\nAlgunos ejemplos de funciones preestablecidas en Python son:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"print()"}),": Utilizada para imprimir mensajes o valores en la consola. Es una funcion que se usa\r\nen consola mucho, pero dentro de Dynamo no la usaremos mucho en su lugar usaremos la\r\nvisualizacio nde datos mediantes los puertos de salida (",(0,a.jsx)(n.code,{children:"OUT"}),")."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:'print("Hola, mundo!") # Usado en Consola\r\nOUT = "Hola, mundo!" # Nosotros usaremos la asignacion a la varible OUT\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"len()"}),": Devuelve la longitud (n\xfamero de elementos) de una secuencia, como una cadena,\r\nlista o tupla."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:'texto = "Hola"\r\nlongitud = len(texto)\r\nprint(longitud) # Salida: 4\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type()"}),": Devuelve el tipo de datos de una variable o valor."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"numero = 42\r\ntipo = type(numero)\r\nprint(tipo) # Salida: <class 'int'>\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"int()"}),", ",(0,a.jsx)(n.code,{children:"float()"}),", ",(0,a.jsx)(n.code,{children:"str()"}),", ",(0,a.jsx)(n.code,{children:"bool()"}),": Estas funciones convierten valores de un tipo de dato a otro."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:'numero_texto = "42"\r\nnumero_entero = int(numero_texto)\r\nprint(numero_entero) # Salida: 42\n'})}),"\n",(0,a.jsx)(n.p,{children:"Estos son solo algunos ejemplos de las muchas funciones preestablecidas que Python ofrece.\r\nPuedes consultar la documentaci\xf3n oficial de Python para conocer m\xe1s detalles sobre todas las\r\nfunciones incorporadas y c\xf3mo utilizarlas: funciones para Python 3.\r\nHay que tener precauci\xf3n en el uso de funciones predefinidas, ya dentro de Dynamo no tenemos\r\nrealmente corriendo Python, sino una implementaci\xf3n de este lenguaje, lo que podr\xeda ocasionar\r\nque no todas las funciones est\xe9n disponibles para los PythonScripts."}),"\n",(0,a.jsx)(n.admonition,{title:"Cuidado!",type:"danger",children:(0,a.jsxs)(n.p,{children:["Dynamo en realidad usa una las implementaciones ",(0,a.jsx)(n.strong,{children:"Cpython"})," y ",(0,a.jsx)(n.strong,{children:"IronPython"}),", por lo que algunas de las funcioens de Python podr\xedan no estar presentes en Dynamo."]})}),"\n",(0,a.jsx)(n.h2,{id:"52-funciones-personalizadas",children:"5.2. Funciones Personalizadas"}),"\n",(0,a.jsxs)(n.p,{children:["Una funci\xf3n en Python se define utilizando la palabra clave ",(0,a.jsx)(n.code,{children:"def"})," seguida del nombre de\r\nla funci\xf3n y par\xe9ntesis que pueden contener los argumentos de la funci\xf3n (si los necesita). A\r\ncontinuaci\xf3n, se define el bloque de c\xf3digo que se ejecutar\xe1 cuando la funci\xf3n sea llamada.\r\nLa sintaxis b\xe1sica para definir una funci\xf3n en Python es la siguiente:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"def nombre_de_funcion(argumento1, argumento2, ...):\r\n    # C\xf3digo de la funci\xf3n\r\n    # ...\r\n    return resultado\n"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.strong,{children:[(0,a.jsx)(n.code,{children:"nombre_de_funcion"}),":"]})," Es el nombre que le das a tu funci\xf3n. Debes elegir un nombre\r\ndescriptivo y que siga las convenciones de nombres de Python."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.strong,{children:[(0,a.jsx)(n.code,{children:"argumento1, argumento2, ..."}),":"]})," Son los argumentos que la funci\xf3n puede recibir. Pueden\r\nser opcionales y puedes especificar tantos como necesites."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.strong,{children:[(0,a.jsx)(n.code,{children:"return resultado"}),":"]})," La instrucci\xf3n ",(0,a.jsx)(n.code,{children:"return"})," indica qu\xe9 valor o valores se deben devolver cuando se llama a la funci\xf3n. Puedes devolver m\xfaltiples valores separados por coma\r\no simplemente omitir la instrucci\xf3n ",(0,a.jsx)(n.code,{children:"return"})," si la funci\xf3n no debe devolver ning\xfan\r\nvalor."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Una vez que la funci\xf3n est\xe1 definida, puedes llamarla desde cualquier parte de tu programa\r\nproporcionando los argumentos necesarios (si los tiene). Al llamar a la funci\xf3n, el flujo de ejecuci\xf3n\r\ndel programa pasar\xe1 al bloque de c\xf3digo de la funci\xf3n y realizar\xe1 las operaciones definidas."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var a=s(6540);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);